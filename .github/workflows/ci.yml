name: CI/CD

on:
  push:
  pull_request:
  release:
    types:
      - published

env:
  MINIMUM_PYTHON_VERSION: '3.12'

jobs:
  precommit:
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - uses: actions/checkout@v3
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install pre-commit virtualenv!=20.0.6
          pre-commit install
      - name: Run static code inspections
        run: pre-commit run --all-files

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - uses: abatilo/actions-poetry@v2

    - name: Install dependencies
      run: poetry install

    - name: Run tests
      run: poetry run pytest tests/

  deploy:
    if: github.event_name == 'release'
    needs: [ precommit, build ]
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Upload to pypi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_PASSWORD }}
        run: |
          poetry config http-basic.pypi "__token__" "${POETRY_PYPI_TOKEN_PYPI}"
          poetry publish --build

